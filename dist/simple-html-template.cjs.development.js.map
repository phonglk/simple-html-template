{"version":3,"file":"simple-html-template.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport { parse, walk, SyntaxKind, INode, ITag } from 'html5parser';\n\ntype Config = {\n  outDir: string,\n  ignores: RegExp[],\n  include: RegExp,\n  _: string[],\n}\n\nconst config = require('rc')('sht', {\n  outDir: './compiled',\n  \"ignores\": [/\\.partial\\.html$/, /compiled$/, /\\.compiled\\.html$/],\n  \"include\": /\\.html$/,\n}) as Config;\n\nfunction parseFromFile(filePath: string, fileStack: string[] = []): string {\n  if (fileStack.includes(filePath)) {\n    throw new Error('Circular detected: ' + fileStack.join('->'));\n  }\n\n  try {\n    const html = fs.readFileSync(filePath).toString();\n    return parseHTML(html, path.dirname(filePath), fileStack.concat(filePath));\n  } catch (e) {\n    throw e;\n  }\n}\n\nfunction parseHTML(html: string, dir: string = process.cwd(), fileStack: string[]): string {\n  const ast = parse(html, {setAttributeMap: true})\n  let offset = 0;\n\n  const replaceNode = (node: ITag) => {\n    const src = node.attributeMap?.src.value?.value\n    if (!src) return;\n    const realPath = path.join(dir, src);\n\n    const replaceHTML = parseFromFile(realPath, fileStack);\n    const befLength = html.length;\n    html = html.substring(0, node.start + offset) + replaceHTML + html.substring(node.end + offset);\n    const diff = html.length - befLength;\n    offset += diff;\n  }\n\n  walk(ast, {\n    enter: (node: INode) => {\n      if (node.type === SyntaxKind.Tag && node.name === 'include') {\n        replaceNode(node)\n      }\n    },\n  });\n\n  return html;\n}\n\nfunction compileFile(file: string, out?: string) {\n  const outPath = out || file.replace(/\\.html$/, '.compiled.html');\n  const html = parseFromFile(file);\n  fs.writeFileSync(outPath, html);\n}\n\nfunction compileFolder(folderPath: string) {\n  const { outDir: _outDir, ignores, include } = config;\n  const outDir = path.join(folderPath, _outDir);\n  try {\n    fs.mkdirSync(outDir);\n  } catch (e) {\n    // ignore\n  }\n  const files = fs.readdirSync(folderPath);\n  files.forEach(filename => {\n    if (ignores.some(reg => reg.test(filename))) return;\n    if (include.test(filename)) {\n      const filepath = path.join(folderPath, filename);\n      const out = path.join(outDir, filename);\n      compileFile(filepath, out);\n    }\n  });\n  return true;\n}\n\nfunction compileFromInput(path: string) {\n  if(fs.statSync(path).isDirectory()) {\n    return compileFolder(path)\n  }\n\n  return compileFile(path)\n}\n\nif (config._.length > 0) {\n  compileFromInput(config._[0]);\n}\n\nexport {\n  parseFromFile,\n  parseHTML,\n  compileFile,\n  compileFolder,\n  compileFromInput,\n}\n"],"names":["config","require","outDir","parseFromFile","filePath","fileStack","includes","Error","join","html","fs","readFileSync","toString","parseHTML","path","dirname","concat","e","dir","process","cwd","ast","parse","setAttributeMap","offset","replaceNode","node","src","attributeMap","value","realPath","replaceHTML","befLength","length","substring","start","end","diff","walk","enter","type","SyntaxKind","Tag","name","compileFile","file","out","outPath","replace","writeFileSync","compileFolder","folderPath","_outDir","ignores","include","mkdirSync","files","readdirSync","forEach","filename","some","reg","test","filepath","compileFromInput","statSync","isDirectory","_"],"mappings":"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"}