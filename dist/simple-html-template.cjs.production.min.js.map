{"version":3,"file":"simple-html-template.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport { parse, walk, SyntaxKind, INode, ITag } from 'html5parser';\n\ntype Config = {\n  outDir: string,\n  ignores: RegExp[],\n  include: RegExp,\n  _: string[],\n}\n\nconst config = require('rc')('sht', {\n  outDir: './compiled',\n  \"ignores\": [/\\.partial\\.html$/, /compiled$/, /\\.compiled\\.html$/],\n  \"include\": /\\.html$/,\n}) as Config;\n\nfunction parseFromFile(filePath: string, fileStack: string[] = []): string {\n  if (fileStack.includes(filePath)) {\n    throw new Error('Circular detected: ' + fileStack.join('->'));\n  }\n\n  try {\n    const html = fs.readFileSync(filePath).toString();\n    return parseHTML(html, path.dirname(filePath), fileStack.concat(filePath));\n  } catch (e) {\n    throw e;\n  }\n}\n\nfunction parseHTML(html: string, dir: string = process.cwd(), fileStack: string[]): string {\n  const ast = parse(html, {setAttributeMap: true})\n  let offset = 0;\n\n  const replaceNode = (node: ITag) => {\n    const src = node.attributeMap?.src.value?.value\n    if (!src) return;\n    const realPath = path.join(dir, src);\n\n    const replaceHTML = parseFromFile(realPath, fileStack);\n    const befLength = html.length;\n    html = html.substring(0, node.start + offset) + replaceHTML + html.substring(node.end + offset);\n    const diff = html.length - befLength;\n    offset += diff;\n  }\n\n  walk(ast, {\n    enter: (node: INode) => {\n      if (node.type === SyntaxKind.Tag && node.name === 'include') {\n        replaceNode(node)\n      }\n    },\n  });\n\n  return html;\n}\n\nfunction compileFile(file: string, out?: string) {\n  const outPath = out || file.replace(/\\.html$/, '.compiled.html');\n  const html = parseFromFile(file);\n  fs.writeFileSync(outPath, html);\n}\n\nfunction compileFolder(folderPath: string) {\n  const { outDir: _outDir, ignores, include } = config;\n  const outDir = path.join(folderPath, _outDir);\n  try {\n    fs.mkdirSync(outDir);\n  } catch (e) {\n    // ignore\n  }\n  const files = fs.readdirSync(folderPath);\n  files.forEach(filename => {\n    if (ignores.some(reg => reg.test(filename))) return;\n    if (include.test(filename)) {\n      const filepath = path.join(folderPath, filename);\n      const out = path.join(outDir, filename);\n      compileFile(filepath, out);\n    }\n  });\n  return true;\n}\n\nfunction compileFromInput(path: string) {\n  if(fs.statSync(path).isDirectory()) {\n    return compileFolder(path)\n  }\n\n  return compileFile(path)\n}\n\nif (config._.length > 0) {\n  compileFromInput(config._[0]);\n}\n\nexport {\n  parseFromFile,\n  parseHTML,\n  compileFile,\n  compileFolder,\n  compileFromInput,\n}\n"],"names":["config","require","outDir","ignores","include","parseFromFile","filePath","fileStack","includes","Error","join","parseHTML","fs","readFileSync","toString","path","dirname","concat","e","html","dir","process","cwd","ast","parse","setAttributeMap","offset","walk","enter","node","type","SyntaxKind","Tag","name","src","attributeMap","_node$attributeMap","value","_node$attributeMap$sr","replaceHTML","befLength","length","substring","start","end","replaceNode","compileFile","file","out","outPath","replace","writeFileSync","compileFolder","folderPath","mkdirSync","readdirSync","forEach","filename","some","reg","test","compileFromInput","statSync","isDirectory","_"],"mappings":"+MAWMA,EAASC,QAAQ,KAARA,CAAc,MAAO,CAClCC,OAAQ,aACRC,QAAW,CAAC,mBAAoB,YAAa,qBAC7CC,QAAW,YAGb,SAASC,EAAcC,EAAkBC,GACvC,YADuCA,IAAAA,EAAsB,IACzDA,EAAUC,SAASF,GACrB,MAAM,IAAIG,MAAM,sBAAwBF,EAAUG,KAAK,OAGzD,IAEE,OAAOC,EADMC,EAAGC,aAAaP,GAAUQ,WAChBC,EAAKC,QAAQV,GAAWC,EAAUU,OAAOX,IAChE,MAAOY,GACP,MAAMA,GAIV,SAASP,EAAUQ,EAAcC,EAA6Bb,YAA7Ba,IAAAA,EAAcC,QAAQC,OACrD,IAAMC,EAAMC,QAAML,EAAM,CAACM,iBAAiB,IACtCC,EAAS,EAsBb,OARAC,OAAKJ,EAAK,CACRK,MAAO,SAACC,GACFA,EAAKC,OAASC,aAAWC,KAAqB,YAAdH,EAAKI,MAdzB,SAACJ,WACbK,WAAML,EAAKM,wBAALC,EAAmBF,IAAIG,cAAvBC,EAA8BD,MAC1C,GAAKH,EAAL,CACA,IAEMK,EAAclC,EAFHU,EAAKL,KAAKU,EAAKc,GAEY3B,GACtCiC,EAAYrB,EAAKsB,OACvBtB,EAAOA,EAAKuB,UAAU,EAAGb,EAAKc,MAAQjB,GAAUa,EAAcpB,EAAKuB,UAAUb,EAAKe,IAAMlB,GAExFA,GADaP,EAAKsB,OAASD,GAOvBK,CAAYhB,MAKXV,EAGT,SAAS2B,EAAYC,EAAcC,GACjC,IAAMC,EAAUD,GAAOD,EAAKG,QAAQ,UAAW,kBACzC/B,EAAOd,EAAc0C,GAC3BnC,EAAGuC,cAAcF,EAAS9B,GAG5B,SAASiC,EAAcC,GACrB,IAAyBlD,EAAqBH,EAArBG,QAASC,EAAYJ,EAAZI,QAC5BF,EAASa,EAAKL,KAAK2C,EADqBrD,EAAtCE,QAER,IACEU,EAAG0C,UAAUpD,GACb,MAAOgB,IAYT,OATcN,EAAG2C,YAAYF,GACvBG,SAAQ,SAAAC,GACRtD,EAAQuD,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKH,OAC7BrD,EAAQwD,KAAKH,IAGfX,EAFiB/B,EAAKL,KAAK2C,EAAYI,GAC3B1C,EAAKL,KAAKR,EAAQuD,QAI3B,EAGT,SAASI,EAAiB9C,GACxB,OAAGH,EAAGkD,SAAS/C,GAAMgD,cACZX,EAAcrC,GAGhB+B,EAAY/B,GAGjBf,EAAOgE,EAAEvB,OAAS,GACpBoB,EAAiB7D,EAAOgE,EAAE"}